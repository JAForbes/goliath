// Generated by LiveScript 1.5.0
(function(){
  var defaults, view, ref$, out$ = typeof exports != 'undefined' && exports || this;
  defaults = {
    button: {
      style: ".bg-blue.bw0.outline-0",
      size: ".w3.h3.f1",
      shape: ".br-100",
      behaviour: ".grow"
    },
    content: {
      style: ".white",
      size: "",
      shape: "",
      behaviour: ""
    }
  };
  view = function(h){
    return function(arg$){
      var ref$, button, ref1$, content, a, b;
      ref$ = arg$ != null
        ? arg$
        : {}, button = (ref1$ = ref$.button) != null
        ? ref1$
        : {}, content = (ref1$ = ref$.content) != null
        ? ref1$
        : {};
      a = import$(clone$(defaults.button), button);
      b = import$(clone$(defaults.content), content);
      return function(text, onclick, attrs){
        return h('button' + [a['size'], a['style'], a['shape'], a['behaviour']].join(""), import$({
          onclick: onclick
        }, attrs), h('span' + [b['size'], b['style'], b['shape'], b['behaviour']].join(""), text));
      };
    };
  };
  ref$ = out$;
  ref$.view = view;
  ref$.defaults = defaults;
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
  function clone$(it){
    function fun(){} fun.prototype = it;
    return new fun;
  }
}).call(this);
